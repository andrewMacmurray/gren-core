module Crypto exposing ( randomUuid, getRandomValues )

{-| 

@docs randomUuid

-}

import Basics exposing ( Int, (<) )
import Gren.Kernel.Crypto
import Task exposing ( Task )
import String exposing ( String )
import Array exposing ( Array )


{-| Get a random UUID.
-}
randomUuid : Task x String
randomUuid =
    Gren.Kernel.Crypto.randomUUID


{-|-}
getRandomValues : Int -> Task x (Array String)
getRandomValues int =
    -- Checks to make sure the integer is at least 0. 
    -- Negative integers will crash the program.
    if int < 0 then
        Gren.Kernel.Crypto.getRandomValues 0
    else
        Gren.Kernel.Crypto.getRandomValues int
